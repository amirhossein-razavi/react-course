{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amirhossein Razavi\\\\Desktop\\\\react-course\\\\react-course\\\\src\\\\App.js\";\nimport React from 'react';\nimport { connect } from 'cato-react-store';\nimport mapping from './mapping';\nimport styles from './styles';\nimport Post from './components/Post';\nimport ShowPost from './components/ShowPost';\nimport PostList from './components/PostList';\nimport AddPost from './components/AddPost';\n\nclass App extends React.PureComponent {\n  componentDidMount() {\n    const _this$props = this.props,\n          posts = _this$props.posts,\n          initializePosts = _this$props.initializePosts;\n\n    if (!posts) {\n      initializePosts();\n    }\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          _this$props2$posts = _this$props2.posts,\n          posts = _this$props2$posts === void 0 ? [] : _this$props2$posts,\n          addPost = _this$props2.addPost;\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, 'Posts App | ', React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"\".concat(posts.length, \" posts\"))), React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-success\",\n      onClick: () => addPost(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, 'Add Post')), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: styles.postList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(PostList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: styles.showPost,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Post, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: styles.showPost,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(ShowPost, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: styles.showPost,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(AddPost, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    })));\n  }\n\n} // class AppContainer extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       posts: postRepo.loadPosts() || [],\n//       selectedPost: {},\n//       mode: '',\n//       post: {},\n//     };\n//     this.onSelectPost = this.onSelectPost.bind(this);\n//     this.onSave = this.onSave.bind(this);\n//     this.onChange = this.onChange.bind(this);\n//     this.onCancel = this.onCancel.bind(this);\n//     this.onDelete = this.onDelete.bind(this);\n//     this.onEdit = this.onEdit.bind(this);\n//     this.addPost = this.addPost.bind(this);\n//   }\n//   onSelectPost(post) {\n//     this.setState({\n//       selectedPost: { ...post },\n//       mode: 'selectedPost',\n//     });\n//   }\n//   onSave(post) {\n//     const { posts } = this.state;\n//     let newPosts;\n//     if (post.userId === 'newUser') {\n//       newPosts = [...posts, { ...post, userId: '' }];\n//     } else {\n//       newPosts = posts.map((p) => (\n//         p.id === post.id\n//           ? { ...post }\n//           : p\n//       ));\n//     }\n//     this.setState(() => ({\n//       mode: '',\n//       posts: newPosts,\n//       selectedPost: {},\n//     }), () => {\n//       postRepo.savePosts(newPosts);\n//     });\n//   }\n//   onDelete(post) {\n//     // eslint-disable-next-line no-restricted-globals\n//     const onConfirm = confirm('are you sure');\n//     if (onConfirm) {\n//       this.setState((state) => ({\n//         ...state,\n//         posts: state.posts.filter((p) => post.id !== p.id),\n//       }), () => {\n//         const { posts } = this.state;\n//         postRepo.savePosts(posts);\n//       });\n//     }\n//   }\n//   onChange(prop, value) {\n//     this.setState((state) => ({\n//       selectedPost: {\n//         ...state.selectedPost,\n//         [prop]: value,\n//       },\n//     }));\n//   }\n//   onCancel() {\n//     this.setState({\n//       selectedPost: {},\n//       mode: '',\n//     });\n//   }\n//   onEdit(selectedPost) {\n//     this.setState({\n//       mode: 'Edit',\n//       selectedPost: { ...selectedPost },\n//     });\n//   }\n//   addPost() {\n//     const { posts } = this.state;\n//     const postsLen = Number(posts.length);\n//     const lastId = Number(posts[postsLen - 1].id);\n//     this.setState({\n//       selectedPost: {\n//         userId: 'newUser',\n//         id: lastId + 1,\n//         title: '',\n//         body: '',\n//       },\n//       mode: 'AddPost',\n//     });\n//   }\n//   render() {\n//     const {\n//       posts, selectedPost, mode,\n//     } = this.state;\n//     return (\n//       <App\n//         posts={posts}\n//         selectedPost={selectedPost}\n//         mode={mode}\n//         addPost={this.addPost}\n//         onSelectPost={this.onSelectPost}\n//         onSave={this.onSave}\n//         onDelete={this.onDelete}\n//         onChange={this.onChange}\n//         onCancel={this.onCancel}\n//         onEdit={this.onEdit}\n//       />\n//     );\n//   }\n// }\n\n\nexport default connect(mapping)(App);","map":{"version":3,"sources":["C:\\Users\\Amirhossein Razavi\\Desktop\\react-course\\react-course\\src\\App.js"],"names":["React","connect","mapping","styles","Post","ShowPost","PostList","AddPost","App","PureComponent","componentDidMount","props","posts","initializePosts","render","addPost","length","postList","showPost"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,kBAAxB;AAEA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;AAEA,MAAMC,GAAN,SAAkBR,KAAK,CAACS,aAAxB,CAAsC;AAEpCC,EAAAA,iBAAiB,GAAG;AAAA,wBACiB,KAAKC,KADtB;AAAA,UACVC,KADU,eACVA,KADU;AAAA,UACHC,eADG,eACHA,eADG;;AAGlB,QAAI,CAACD,KAAL,EAAY;AACVC,MAAAA,eAAe;AAChB;AACF;;AAEDC,EAAAA,MAAM,GAAG;AAAA,yBACyB,KAAKH,KAD9B;AAAA,4CACCC,KADD;AAAA,UACCA,KADD,mCACS,EADT;AAAA,UACaG,OADb,gBACaA,OADb;AAGP,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,cADH,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAWH,KAAK,CAACI,MAAjB,YAFF,CADF,EAKE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,SAAS,EAAC,iBAFZ;AAGE,MAAA,OAAO,EAAE,MAAMD,OAAO,EAHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKG,UALH,CALF,CADF,EAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdF,EAgBE;AAAK,MAAA,KAAK,EAAEZ,MAAM,CAACc,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAhBF,EAoBE;AAAK,MAAA,KAAK,EAAEd,MAAM,CAACe,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CApBF,EAwBE;AAAK,MAAA,KAAK,EAAEf,MAAM,CAACe,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAxBF,EA4BE;AAAK,MAAA,KAAK,EAAEf,MAAM,CAACe,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CA5BF,CADF;AAkCD;;AA/CmC,C,CAkDteAAejB,OAAO,CAACC,OAAD,CAAP,CAAiBM,GAAjB,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'cato-react-store';\r\n\r\nimport mapping from './mapping';\r\nimport styles from './styles';\r\n\r\nimport Post from './components/Post';\r\nimport ShowPost from './components/ShowPost';\r\nimport PostList from './components/PostList';\r\nimport AddPost from './components/AddPost';\r\n\r\nclass App extends React.PureComponent {\r\n  \r\n  componentDidMount() {\r\n    const { posts, initializePosts } = this.props;\r\n\r\n    if (!posts) {\r\n      initializePosts();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { posts = [], addPost } = this.props;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div>\r\n          <h1>\r\n            {'Posts App | '}\r\n            <small>{`${posts.length} posts`}</small>\r\n          </h1>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-success\"\r\n            onClick={() => addPost()}\r\n          >\r\n            {'Add Post'}\r\n          </button>\r\n        </div>\r\n        <hr />\r\n\r\n        <div style={styles.postList}>\r\n          <PostList />\r\n        </div>\r\n\r\n        <div style={styles.showPost}>\r\n          <Post />\r\n        </div>\r\n\r\n        <div style={styles.showPost}>\r\n          <ShowPost />\r\n        </div>\r\n\r\n        <div style={styles.showPost}>\r\n          <AddPost />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// class AppContainer extends React.Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n\r\n//     this.state = {\r\n//       posts: postRepo.loadPosts() || [],\r\n//       selectedPost: {},\r\n//       mode: '',\r\n//       post: {},\r\n//     };\r\n\r\n//     this.onSelectPost = this.onSelectPost.bind(this);\r\n//     this.onSave = this.onSave.bind(this);\r\n//     this.onChange = this.onChange.bind(this);\r\n//     this.onCancel = this.onCancel.bind(this);\r\n//     this.onDelete = this.onDelete.bind(this);\r\n//     this.onEdit = this.onEdit.bind(this);\r\n//     this.addPost = this.addPost.bind(this);\r\n//   }\r\n\r\n//   onSelectPost(post) {\r\n//     this.setState({\r\n//       selectedPost: { ...post },\r\n//       mode: 'selectedPost',\r\n//     });\r\n//   }\r\n\r\n//   onSave(post) {\r\n//     const { posts } = this.state;\r\n//     let newPosts;\r\n\r\n//     if (post.userId === 'newUser') {\r\n//       newPosts = [...posts, { ...post, userId: '' }];\r\n//     } else {\r\n//       newPosts = posts.map((p) => (\r\n//         p.id === post.id\r\n//           ? { ...post }\r\n//           : p\r\n//       ));\r\n//     }\r\n\r\n//     this.setState(() => ({\r\n//       mode: '',\r\n//       posts: newPosts,\r\n//       selectedPost: {},\r\n//     }), () => {\r\n//       postRepo.savePosts(newPosts);\r\n//     });\r\n//   }\r\n\r\n//   onDelete(post) {\r\n//     // eslint-disable-next-line no-restricted-globals\r\n//     const onConfirm = confirm('are you sure');\r\n\r\n//     if (onConfirm) {\r\n//       this.setState((state) => ({\r\n//         ...state,\r\n//         posts: state.posts.filter((p) => post.id !== p.id),\r\n//       }), () => {\r\n//         const { posts } = this.state;\r\n//         postRepo.savePosts(posts);\r\n//       });\r\n//     }\r\n//   }\r\n\r\n//   onChange(prop, value) {\r\n//     this.setState((state) => ({\r\n//       selectedPost: {\r\n//         ...state.selectedPost,\r\n//         [prop]: value,\r\n//       },\r\n//     }));\r\n//   }\r\n\r\n//   onCancel() {\r\n//     this.setState({\r\n//       selectedPost: {},\r\n//       mode: '',\r\n//     });\r\n//   }\r\n\r\n//   onEdit(selectedPost) {\r\n//     this.setState({\r\n//       mode: 'Edit',\r\n//       selectedPost: { ...selectedPost },\r\n//     });\r\n//   }\r\n\r\n//   addPost() {\r\n//     const { posts } = this.state;\r\n//     const postsLen = Number(posts.length);\r\n//     const lastId = Number(posts[postsLen - 1].id);\r\n//     this.setState({\r\n//       selectedPost: {\r\n//         userId: 'newUser',\r\n//         id: lastId + 1,\r\n//         title: '',\r\n//         body: '',\r\n//       },\r\n//       mode: 'AddPost',\r\n//     });\r\n//   }\r\n\r\n//   render() {\r\n//     const {\r\n//       posts, selectedPost, mode,\r\n//     } = this.state;\r\n\r\n//     return (\r\n//       <App\r\n//         posts={posts}\r\n//         selectedPost={selectedPost}\r\n//         mode={mode}\r\n//         addPost={this.addPost}\r\n//         onSelectPost={this.onSelectPost}\r\n//         onSave={this.onSave}\r\n//         onDelete={this.onDelete}\r\n//         onChange={this.onChange}\r\n//         onCancel={this.onCancel}\r\n//         onEdit={this.onEdit}\r\n//       />\r\n//     );\r\n//   }\r\n// }\r\n\r\nexport default connect(mapping)(App);\r\n"]},"metadata":{},"sourceType":"module"}