{"ast":null,"code":"import _defineProperty from \"/home/sarb/projects/session-02/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/sarb/projects/session-02/src/App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { connect } from 'cato-react-store';\nimport mapping from './mapping';\nimport repository from './repository';\nimport styles from './styles';\nimport Post from './components/Post';\nimport ShowPost from './components/ShowPost';\nimport PostList from './components/PostList';\nimport AddPost from './components/AddPost';\nconst postRepo = repository.postRepo;\n\nconst App = ({\n  posts,\n  selectedPost,\n  mode,\n  addPost,\n  onSelectPost,\n  onEdit,\n  onDelete,\n  onCancel,\n  onChange,\n  onSave\n}) => React.createElement(\"div\", {\n  className: \"container\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}, React.createElement(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}, 'Posts App | ', React.createElement(\"small\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}, \"\".concat(posts.length, \" posts\"))), React.createElement(\"button\", {\n  type: \"button\",\n  className: \"btn btn-success\",\n  onClick: () => addPost(),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n}, 'Add Post')), React.createElement(\"hr\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30\n  },\n  __self: this\n}), React.createElement(\"div\", {\n  style: styles.postList,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32\n  },\n  __self: this\n}, React.createElement(PostList, {\n  posts: posts,\n  onSelect: onSelectPost,\n  selectedPost: selectedPost,\n  onEdit: onEdit,\n  onDelete: onDelete,\n  mode: mode,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33\n  },\n  __self: this\n})), React.createElement(\"div\", {\n  style: styles.showPost,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43\n  },\n  __self: this\n}, React.createElement(Post, {\n  post: selectedPost,\n  onCancel: onCancel,\n  onChange: onChange,\n  onSave: onSave,\n  mode: mode,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44\n  },\n  __self: this\n})), React.createElement(\"div\", {\n  style: styles.showPost,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 53\n  },\n  __self: this\n}, React.createElement(ShowPost, {\n  post: selectedPost,\n  mode: mode,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54\n  },\n  __self: this\n})), React.createElement(\"div\", {\n  style: styles.showPost,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 57\n  },\n  __self: this\n}, React.createElement(AddPost, {\n  mode: mode,\n  onChange: onChange,\n  onSave: onSave,\n  onCancel: onCancel,\n  post: selectedPost,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 58\n  },\n  __self: this\n})));\n\nclass AppContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      posts: postRepo.loadPosts() || [],\n      selectedPost: {},\n      mode: '',\n      post: {}\n    };\n    this.onSelectPost = this.onSelectPost.bind(this);\n    this.onSave = this.onSave.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.onCancel = this.onCancel.bind(this);\n    this.onDelete = this.onDelete.bind(this);\n    this.onEdit = this.onEdit.bind(this);\n    this.addPost = this.addPost.bind(this);\n  }\n\n  onSelectPost(post) {\n    this.setState({\n      selectedPost: _objectSpread({}, post),\n      mode: 'selectedPost'\n    });\n  }\n\n  onSave(post) {\n    const posts = this.state.posts;\n    let newPosts;\n\n    if (post.userId === 'newUser') {\n      newPosts = [...posts, _objectSpread({}, post, {\n        userId: ''\n      })];\n    } else {\n      newPosts = posts.map(p => p.id === post.id ? _objectSpread({}, post) : p);\n    }\n\n    this.setState(() => ({\n      mode: '',\n      posts: newPosts,\n      selectedPost: {}\n    }), () => {\n      postRepo.savePosts(newPosts);\n    });\n  }\n\n  onDelete(post) {\n    // eslint-disable-next-line no-restricted-globals\n    const onConfirm = confirm('are you sure');\n\n    if (onConfirm) {\n      this.setState(state => _objectSpread({}, state, {\n        posts: state.posts.filter(p => post.id !== p.id)\n      }), () => {\n        const posts = this.state.posts;\n        postRepo.savePosts(posts);\n      });\n    }\n  }\n\n  onChange(prop, value) {\n    this.setState(state => ({\n      selectedPost: _objectSpread({}, state.selectedPost, {\n        [prop]: value\n      })\n    }));\n  }\n\n  onCancel() {\n    this.setState({\n      selectedPost: {},\n      mode: ''\n    });\n  }\n\n  onEdit(selectedPost) {\n    this.setState({\n      mode: 'Edit',\n      selectedPost: _objectSpread({}, selectedPost)\n    });\n  }\n\n  addPost() {\n    const posts = this.state.posts;\n    const postsLen = Number(posts.length);\n    const lastId = Number(posts[postsLen - 1].id);\n    this.setState({\n      selectedPost: {\n        userId: 'newUser',\n        id: lastId + 1,\n        title: '',\n        body: ''\n      },\n      mode: 'AddPost'\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          posts = _this$state.posts,\n          selectedPost = _this$state.selectedPost,\n          mode = _this$state.mode;\n    return React.createElement(App, {\n      posts: posts,\n      selectedPost: selectedPost,\n      mode: mode,\n      addPost: this.addPost,\n      onSelectPost: this.onSelectPost,\n      onSave: this.onSave,\n      onDelete: this.onDelete,\n      onChange: this.onChange,\n      onCancel: this.onCancel,\n      onEdit: this.onEdit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default connect(mapping)(App);","map":{"version":3,"sources":["/home/sarb/projects/session-02/src/App.js"],"names":["React","connect","mapping","repository","styles","Post","ShowPost","PostList","AddPost","postRepo","App","posts","selectedPost","mode","addPost","onSelectPost","onEdit","onDelete","onCancel","onChange","onSave","length","postList","showPost","AppContainer","Component","constructor","props","state","loadPosts","post","bind","setState","newPosts","userId","map","p","id","savePosts","onConfirm","confirm","filter","prop","value","postsLen","Number","lastId","title","body","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'cato-react-store';\n\nimport mapping from './mapping';\nimport repository from './repository';\nimport styles from './styles';\n\nimport Post from './components/Post';\nimport ShowPost from './components/ShowPost';\nimport PostList from './components/PostList';\nimport AddPost from './components/AddPost';\n\nconst { postRepo } = repository;\n\nconst App = ({ posts, selectedPost, mode, addPost, onSelectPost, onEdit, onDelete, onCancel, onChange, onSave }) => (\n  <div className=\"container\">\n    <div>\n      <h1>\n        {'Posts App | '}\n        <small>{`${posts.length} posts`}</small>\n      </h1>\n      <button\n        type=\"button\"\n        className=\"btn btn-success\"\n        onClick={() => addPost()}\n      >\n        {'Add Post'}\n      </button>\n    </div>\n    <hr />\n\n    <div style={styles.postList}>\n      <PostList\n        posts={posts}\n        onSelect={onSelectPost}\n        selectedPost={selectedPost}\n        onEdit={onEdit}\n        onDelete={onDelete}\n        mode={mode}\n      />\n    </div>\n\n    <div style={styles.showPost}>\n      <Post\n        post={selectedPost}\n        onCancel={onCancel}\n        onChange={onChange}\n        onSave={onSave}\n        mode={mode}\n      />\n    </div>\n\n    <div style={styles.showPost}>\n      <ShowPost post={selectedPost} mode={mode} />\n    </div>\n\n    <div style={styles.showPost}>\n      <AddPost\n        mode={mode}\n        onChange={onChange}\n        onSave={onSave}\n        onCancel={onCancel}\n        post={selectedPost}\n      />\n    </div>\n  </div>\n);\n\nclass AppContainer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      posts: postRepo.loadPosts() || [],\n      selectedPost: {},\n      mode: '',\n      post: {},\n    };\n\n    this.onSelectPost = this.onSelectPost.bind(this);\n    this.onSave = this.onSave.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.onCancel = this.onCancel.bind(this);\n    this.onDelete = this.onDelete.bind(this);\n    this.onEdit = this.onEdit.bind(this);\n    this.addPost = this.addPost.bind(this);\n  }\n\n  onSelectPost(post) {\n    this.setState({\n      selectedPost: { ...post },\n      mode: 'selectedPost',\n    });\n  }\n\n  onSave(post) {\n    const { posts } = this.state;\n    let newPosts;\n\n    if (post.userId === 'newUser') {\n      newPosts = [...posts, { ...post, userId: '' }];\n    } else {\n      newPosts = posts.map((p) => (\n        p.id === post.id\n          ? { ...post }\n          : p\n      ));\n    }\n\n    this.setState(() => ({\n      mode: '',\n      posts: newPosts,\n      selectedPost: {},\n    }), () => {\n      postRepo.savePosts(newPosts);\n    });\n  }\n\n  onDelete(post) {\n    // eslint-disable-next-line no-restricted-globals\n    const onConfirm = confirm('are you sure');\n\n    if (onConfirm) {\n      this.setState((state) => ({\n        ...state,\n        posts: state.posts.filter((p) => post.id !== p.id),\n      }), () => {\n        const { posts } = this.state;\n        postRepo.savePosts(posts);\n      });\n    }\n  }\n\n  onChange(prop, value) {\n    this.setState((state) => ({\n      selectedPost: {\n        ...state.selectedPost,\n        [prop]: value,\n      },\n    }));\n  }\n\n  onCancel() {\n    this.setState({\n      selectedPost: {},\n      mode: '',\n    });\n  }\n\n  onEdit(selectedPost) {\n    this.setState({\n      mode: 'Edit',\n      selectedPost: { ...selectedPost },\n    });\n  }\n\n  addPost() {\n    const { posts } = this.state;\n    const postsLen = Number(posts.length);\n    const lastId = Number(posts[postsLen - 1].id);\n    this.setState({\n      selectedPost: {\n        userId: 'newUser',\n        id: lastId + 1,\n        title: '',\n        body: '',\n      },\n      mode: 'AddPost',\n    });\n  }\n\n  render() {\n    const {\n      posts, selectedPost, mode,\n    } = this.state;\n\n    return (\n      <App\n        posts={posts}\n        selectedPost={selectedPost}\n        mode={mode}\n        addPost={this.addPost}\n        onSelectPost={this.onSelectPost}\n        onSave={this.onSave}\n        onDelete={this.onDelete}\n        onChange={this.onChange}\n        onCancel={this.onCancel}\n        onEdit={this.onEdit}\n      />\n    );\n  }\n}\n\nexport default connect(mapping)(App);\n"]},"metadata":{},"sourceType":"module"}