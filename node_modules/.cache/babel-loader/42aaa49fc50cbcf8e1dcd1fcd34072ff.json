{"ast":null,"code":"var _jsxFileName = \"/home/sarb/projects/session-02/src/App.js\";\nimport React from 'react';\nimport { connect } from 'cato-react-store';\nimport mapping from './mapping';\nimport styles from './styles';\nimport Post from './components/Post';\nimport ShowPost from './components/ShowPost';\nimport PostList from './components/PostList';\nimport AddPost from './components/AddPost';\n\nconst App = ({\n  posts = [],\n  addPost\n}) => React.createElement(\"div\", {\n  className: \"container\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}, React.createElement(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}, 'Posts App | ', React.createElement(\"small\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}, \"\".concat(posts.length, \" posts\"))), React.createElement(\"button\", {\n  type: \"button\",\n  className: \"btn btn-success\",\n  onClick: () => addPost(),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}, 'Add Post')), React.createElement(\"hr\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27\n  },\n  __self: this\n}), React.createElement(\"div\", {\n  style: styles.postList,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n}, React.createElement(PostList, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30\n  },\n  __self: this\n}))); // class AppContainer extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       posts: postRepo.loadPosts() || [],\n//       selectedPost: {},\n//       mode: '',\n//       post: {},\n//     };\n//     this.onSelectPost = this.onSelectPost.bind(this);\n//     this.onSave = this.onSave.bind(this);\n//     this.onChange = this.onChange.bind(this);\n//     this.onCancel = this.onCancel.bind(this);\n//     this.onDelete = this.onDelete.bind(this);\n//     this.onEdit = this.onEdit.bind(this);\n//     this.addPost = this.addPost.bind(this);\n//   }\n//   onSelectPost(post) {\n//     this.setState({\n//       selectedPost: { ...post },\n//       mode: 'selectedPost',\n//     });\n//   }\n//   onSave(post) {\n//     const { posts } = this.state;\n//     let newPosts;\n//     if (post.userId === 'newUser') {\n//       newPosts = [...posts, { ...post, userId: '' }];\n//     } else {\n//       newPosts = posts.map((p) => (\n//         p.id === post.id\n//           ? { ...post }\n//           : p\n//       ));\n//     }\n//     this.setState(() => ({\n//       mode: '',\n//       posts: newPosts,\n//       selectedPost: {},\n//     }), () => {\n//       postRepo.savePosts(newPosts);\n//     });\n//   }\n//   onDelete(post) {\n//     // eslint-disable-next-line no-restricted-globals\n//     const onConfirm = confirm('are you sure');\n//     if (onConfirm) {\n//       this.setState((state) => ({\n//         ...state,\n//         posts: state.posts.filter((p) => post.id !== p.id),\n//       }), () => {\n//         const { posts } = this.state;\n//         postRepo.savePosts(posts);\n//       });\n//     }\n//   }\n//   onChange(prop, value) {\n//     this.setState((state) => ({\n//       selectedPost: {\n//         ...state.selectedPost,\n//         [prop]: value,\n//       },\n//     }));\n//   }\n//   onCancel() {\n//     this.setState({\n//       selectedPost: {},\n//       mode: '',\n//     });\n//   }\n//   onEdit(selectedPost) {\n//     this.setState({\n//       mode: 'Edit',\n//       selectedPost: { ...selectedPost },\n//     });\n//   }\n//   addPost() {\n//     const { posts } = this.state;\n//     const postsLen = Number(posts.length);\n//     const lastId = Number(posts[postsLen - 1].id);\n//     this.setState({\n//       selectedPost: {\n//         userId: 'newUser',\n//         id: lastId + 1,\n//         title: '',\n//         body: '',\n//       },\n//       mode: 'AddPost',\n//     });\n//   }\n//   render() {\n//     const {\n//       posts, selectedPost, mode,\n//     } = this.state;\n//     return (\n//       <App\n//         posts={posts}\n//         selectedPost={selectedPost}\n//         mode={mode}\n//         addPost={this.addPost}\n//         onSelectPost={this.onSelectPost}\n//         onSave={this.onSave}\n//         onDelete={this.onDelete}\n//         onChange={this.onChange}\n//         onCancel={this.onCancel}\n//         onEdit={this.onEdit}\n//       />\n//     );\n//   }\n// }\n\n\nexport default connect(mapping)(App);","map":{"version":3,"sources":["/home/sarb/projects/session-02/src/App.js"],"names":["React","connect","mapping","styles","Post","ShowPost","PostList","AddPost","App","posts","addPost","length","postList"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,kBAAxB;AAEA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;AAEA,MAAMC,GAAG,GAAG,CAAC;AAAEC,EAAAA,KAAK,GAAG,EAAV;AAAcC,EAAAA;AAAd,CAAD,KACV;AAAK,EAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACG,cADH,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAWD,KAAK,CAACE,MAAjB,YAFF,CADF,EAKE;AACE,EAAA,IAAI,EAAC,QADP;AAEE,EAAA,SAAS,EAAC,iBAFZ;AAGE,EAAA,OAAO,EAAE,MAAMD,OAAO,EAHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAKG,UALH,CALF,CADF,EAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAdF,EAgBE;AAAK,EAAA,KAAK,EAAEP,MAAM,CAACS,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CAhBF,CADF,C,CAmeAAeX,OAAO,CAACC,OAAD,CAAP,CAAiBM,GAAjB,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'cato-react-store';\n\nimport mapping from './mapping';\nimport styles from './styles';\n\nimport Post from './components/Post';\nimport ShowPost from './components/ShowPost';\nimport PostList from './components/PostList';\nimport AddPost from './components/AddPost';\n\nconst App = ({ posts = [], addPost }) => (\n  <div className=\"container\">\n    <div>\n      <h1>\n        {'Posts App | '}\n        <small>{`${posts.length} posts`}</small>\n      </h1>\n      <button\n        type=\"button\"\n        className=\"btn btn-success\"\n        onClick={() => addPost()}\n      >\n        {'Add Post'}\n      </button>\n    </div>\n    <hr />\n\n    <div style={styles.postList}>\n      <PostList />\n    </div>\n\n    {/* <div style={styles.showPost}>\n      <Post />\n    </div>\n\n    <div style={styles.showPost}>\n      <ShowPost />\n    </div>\n\n    <div style={styles.showPost}>\n      <AddPost />\n    </div> */}\n  </div>\n);\n\n// class AppContainer extends React.Component {\n//   constructor(props) {\n//     super(props);\n\n//     this.state = {\n//       posts: postRepo.loadPosts() || [],\n//       selectedPost: {},\n//       mode: '',\n//       post: {},\n//     };\n\n//     this.onSelectPost = this.onSelectPost.bind(this);\n//     this.onSave = this.onSave.bind(this);\n//     this.onChange = this.onChange.bind(this);\n//     this.onCancel = this.onCancel.bind(this);\n//     this.onDelete = this.onDelete.bind(this);\n//     this.onEdit = this.onEdit.bind(this);\n//     this.addPost = this.addPost.bind(this);\n//   }\n\n//   onSelectPost(post) {\n//     this.setState({\n//       selectedPost: { ...post },\n//       mode: 'selectedPost',\n//     });\n//   }\n\n//   onSave(post) {\n//     const { posts } = this.state;\n//     let newPosts;\n\n//     if (post.userId === 'newUser') {\n//       newPosts = [...posts, { ...post, userId: '' }];\n//     } else {\n//       newPosts = posts.map((p) => (\n//         p.id === post.id\n//           ? { ...post }\n//           : p\n//       ));\n//     }\n\n//     this.setState(() => ({\n//       mode: '',\n//       posts: newPosts,\n//       selectedPost: {},\n//     }), () => {\n//       postRepo.savePosts(newPosts);\n//     });\n//   }\n\n//   onDelete(post) {\n//     // eslint-disable-next-line no-restricted-globals\n//     const onConfirm = confirm('are you sure');\n\n//     if (onConfirm) {\n//       this.setState((state) => ({\n//         ...state,\n//         posts: state.posts.filter((p) => post.id !== p.id),\n//       }), () => {\n//         const { posts } = this.state;\n//         postRepo.savePosts(posts);\n//       });\n//     }\n//   }\n\n//   onChange(prop, value) {\n//     this.setState((state) => ({\n//       selectedPost: {\n//         ...state.selectedPost,\n//         [prop]: value,\n//       },\n//     }));\n//   }\n\n//   onCancel() {\n//     this.setState({\n//       selectedPost: {},\n//       mode: '',\n//     });\n//   }\n\n//   onEdit(selectedPost) {\n//     this.setState({\n//       mode: 'Edit',\n//       selectedPost: { ...selectedPost },\n//     });\n//   }\n\n//   addPost() {\n//     const { posts } = this.state;\n//     const postsLen = Number(posts.length);\n//     const lastId = Number(posts[postsLen - 1].id);\n//     this.setState({\n//       selectedPost: {\n//         userId: 'newUser',\n//         id: lastId + 1,\n//         title: '',\n//         body: '',\n//       },\n//       mode: 'AddPost',\n//     });\n//   }\n\n//   render() {\n//     const {\n//       posts, selectedPost, mode,\n//     } = this.state;\n\n//     return (\n//       <App\n//         posts={posts}\n//         selectedPost={selectedPost}\n//         mode={mode}\n//         addPost={this.addPost}\n//         onSelectPost={this.onSelectPost}\n//         onSave={this.onSave}\n//         onDelete={this.onDelete}\n//         onChange={this.onChange}\n//         onCancel={this.onCancel}\n//         onEdit={this.onEdit}\n//       />\n//     );\n//   }\n// }\n\nexport default connect(mapping)(App);\n"]},"metadata":{},"sourceType":"module"}