{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Amirhossein Razavi\\\\Desktop\\\\react-course\\\\react-course\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport repository from '../../../repository';\nconst postRepo = repository.postRepo;\nexport default ((store, originalProps) => ({\n  selectedPost: store.getState().selectedPost,\n  mode: store.getState().mode || '',\n  index: originalProps.index,\n  post: originalProps.post,\n  posts: store.getState().posts,\n  onEdit: post => {\n    store.setState({\n      mode: 'Edit',\n      selectedPost: _objectSpread({}, post)\n    });\n  },\n  onSelect: post => {\n    store.setState({\n      selectedPost: _objectSpread({}, post),\n      mode: 'selectedPost'\n    });\n  },\n  onDelete: post => {\n    // eslint-disable-next-line no-restricted-globals\n    const onConfirm = confirm('are you sure');\n\n    if (onConfirm) {\n      store.setState(state => _objectSpread({}, state, {\n        posts: state.posts.filter(p => post.id !== p.id)\n      }), () => {\n        postRepo.savePosts(store.getState().posts);\n      });\n    }\n  }\n}));","map":{"version":3,"sources":["C:\\Users\\Amirhossein Razavi\\Desktop\\react-course\\react-course\\src\\components\\PostList\\PostItem\\mapping.js"],"names":["repository","postRepo","store","originalProps","selectedPost","getState","mode","index","post","posts","onEdit","setState","onSelect","onDelete","onConfirm","confirm","state","filter","p","id","savePosts"],"mappings":";;;;;;AAAA,OAAOA,UAAP,MAAuB,qBAAvB;MAEQC,Q,GAAaD,U,CAAbC,Q;AAER,gBAAe,CAACC,KAAD,EAAQC,aAAR,MAA2B;AACxCC,EAAAA,YAAY,EAAEF,KAAK,CAACG,QAAN,GAAiBD,YADS;AAExCE,EAAAA,IAAI,EAAEJ,KAAK,CAACG,QAAN,GAAiBC,IAAjB,IAAyB,EAFS;AAGxCC,EAAAA,KAAK,EAAEJ,aAAa,CAACI,KAHmB;AAIxCC,EAAAA,IAAI,EAAEL,aAAa,CAACK,IAJoB;AAKxCC,EAAAA,KAAK,EAAEP,KAAK,CAACG,QAAN,GAAiBI,KALgB;AAOxCC,EAAAA,MAAM,EAAGF,IAAD,IAAU;AAChBN,IAAAA,KAAK,CAACS,QAAN,CAAe;AACbL,MAAAA,IAAI,EAAE,MADO;AAEbF,MAAAA,YAAY,oBAAOI,IAAP;AAFC,KAAf;AAID,GAZuC;AAcxCI,EAAAA,QAAQ,EAAGJ,IAAD,IAAU;AAClBN,IAAAA,KAAK,CAACS,QAAN,CAAe;AACbP,MAAAA,YAAY,oBAAOI,IAAP,CADC;AAEbF,MAAAA,IAAI,EAAE;AAFO,KAAf;AAID,GAnBuC;AAqBxCO,EAAAA,QAAQ,EAAGL,IAAD,IAAU;AAClB;AACA,UAAMM,SAAS,GAAGC,OAAO,CAAC,cAAD,CAAzB;;AAEA,QAAID,SAAJ,EAAe;AACbZ,MAAAA,KAAK,CAACS,QAAN,CAAgBK,KAAD,sBACVA,KADU;AAEbP,QAAAA,KAAK,EAAEO,KAAK,CAACP,KAAN,CAAYQ,MAAZ,CAAoBC,CAAD,IAAOV,IAAI,CAACW,EAAL,KAAYD,CAAC,CAACC,EAAxC;AAFM,QAAf,EAGI,MAAM;AACRlB,QAAAA,QAAQ,CAACmB,SAAT,CAAmBlB,KAAK,CAACG,QAAN,GAAiBI,KAApC;AACD,OALD;AAMD;AACF;AAjCuC,CAA3B,CAAf","sourcesContent":["import repository from '../../../repository';\r\n\r\nconst { postRepo } = repository;\r\n\r\nexport default (store, originalProps) => ({\r\n  selectedPost: store.getState().selectedPost,\r\n  mode: store.getState().mode || '',\r\n  index: originalProps.index,\r\n  post: originalProps.post,\r\n  posts: store.getState().posts,\r\n\r\n  onEdit: (post) => {\r\n    store.setState({\r\n      mode: 'Edit',\r\n      selectedPost: { ...post },\r\n    });\r\n  },\r\n\r\n  onSelect: (post) => {\r\n    store.setState({\r\n      selectedPost: { ...post },\r\n      mode: 'selectedPost',\r\n    });\r\n  },\r\n\r\n  onDelete: (post) => {\r\n    // eslint-disable-next-line no-restricted-globals\r\n    const onConfirm = confirm('are you sure');\r\n\r\n    if (onConfirm) {\r\n      store.setState((state) => ({\r\n        ...state,\r\n        posts: state.posts.filter((p) => post.id !== p.id),\r\n      }), () => {\r\n        postRepo.savePosts(store.getState().posts);\r\n      });\r\n    }\r\n  },\r\n\r\n});\r\n"]},"metadata":{},"sourceType":"module"}